---
import { Image } from '@astrojs/image/components';
import './tabs.css';

import speakers from '~/data/speakers.json';
import { motion } from 'framer-motion';

export type SpeakerOrgType = {
	name: string;
	url?: string;
}

export type SpeakerType = {
	name: string;
	image: string;
	url: string;
	orgs?: SpeakerOrgType[];
};
---

<!-- Slider main container -->
<div class="speakers-list max-w-7xl">
  <ul class="">
    {
      speakers &&
        speakers.length > 0 &&
        speakers.map((speaker: SpeakerType, i: number) => {
          const image = `/assets/images/speakers/${speaker.image}`;
          const isExternal = speaker.url && speaker.url.startsWith('https');
          const delay = parseFloat(((i + 1) * 0.05).toFixed(2));
          return (
            <motion.li
              className="partner rounded-2xl bg-gradient-to-br from-secondary-alt via-secondary-alt to-transparent"
              initial={{ opacity: 0, y: 20, scale: 0.8 }}
              animate={{ opacity: 1, y: 0, scale: 1 }}
              transition={{ duration: 0.2, delay: delay }}
              viewport={{ once: true }}
              client:visible
            >
              <a
                href={speaker.url ?? '#'}
                class="flex flex-col p-3 lg:p-5 lg:pb-2 text-center focus:outline-none"
                title={speaker.name}
                target={isExternal && '_blank'}
                rel={isExternal && 'nofollow'}
              >
                <Image
                  class="rounded-full border-2 border-primary mx-auto"
                  src={image}
                  aspectRatio={1}
                  alt={speaker.name}
                  width="100"
                  height="100"
                  loading={'lazy'}
                  format={'webp'}
                />
                <span>{speaker.name}</span>
              </a>
							{speaker.orgs && <span class="block text-xs text-center text-accent-light-alpha-60 mb-1">of</span> }
							<ul class="pb-3">
								{speaker.orgs && speaker.orgs.map((org: SpeakerOrgType) => {

									if (org.url) {
										return (<li class="text-xs bg-transparent">
											{org.url && <a href={org.url ?? '#'} target="_blank" rel="nofollow">{org.name}</a>}
										</li>
										)
									} else {
										return (<li class="text-xs bg-transparent">{org.name}</li>)
									}
								})}
								</ul>
            </motion.li>
          );
        })
    }
  </ul>
</div>
