---
import Plant from "../atoms/Plant.astro";

import './plants.css';
---


<div class="plants absolute inset-0 w-full min-h-full overflow-hidden z-10 pointer-events-none">
  <div class="plants__active-area absolute inset-1/3 h-1/3 w-1/3 translate-y-3 flex items-center justify-center pointer-events-auto z-0" />
  <Plant plantName="plants-group" size="w-full" position={{x: 'left-[0%]', y: 'bottom-0', z: 'z-0'}} className="opacity-100 pointer-events-none group" />
</div>


<script>
  import gsap from 'gsap';
  /**
   * @description This is a function to make the plants move out of the way to reveal the button behind them
   * @param {string} selector - The selector of the element to animate
   * @param {number} speed - The speed of the animation
   * @param {number} delay - The delay of the animation
   * @param {number} repeat - The number of times to repeat the animation
   */

   const plantsGroup = document.querySelector('.plants svg');
   const plants = Array.from(plantsGroup.querySelectorAll('g'));
   const trigger = document.querySelector('.plants__active-area');
    const button = document.querySelector('.cta__join-button');
    trigger.appendChild(button);
   console.log('Plants: ', {plants});
   console.log('plant info: ', plants[0].getAttribute('clip-path'));

   const plantsAnimation = (selector, speed, delay, repeat) => {
      console.log('Plants Animation: ', {selector, speed, delay, repeat});
    }

  /**
   * @description This is a function to animate the plants on hover
   */
  const animateOnHover = (plants: SVGGElement[]) => {
    plants.forEach((plant) => {
      if (plant.parentElement === plantsGroup) handlePlantHover(plant);
    });
  }

  const handlePlantHover = (plant: SVGGElement) => {
    console.log('Plant: ', plant);
    plant.addEventListener('mouseenter', () => {
      console.log('Mouse Enter');
      gsap.to(plant, {
        duration: 0.5,
        delay: 0.5,
        scale: 0.95,
        rotate: 2,
        ease: 'circ.out',
      });
    });

    plant.addEventListener('mouseleave', () => {
      console.log('Mouse Leave');
      gsap.to(plant, {
        duration: 0.5,
        delay: 0.5,
        scale: 1,
        rotate: 0,
        ease: 'circ.out',
      });
    });
  }

  const revealButton = () => {
    console.log('Button Reveal');
    trigger.addEventListener('mouseenter', () => {
      console.log('Mouse Enter trigger');
      gsap.to('.plants svg', {
        duration: 0.5,
        delay: 0,
        scale: 1.2,
        yPercent: 5,
        ease: 'circ.out',
      });

      gsap.to('.cta__join-button', {
        duration: 0.5,
        delay: 0,
        scale: 1.3,
        ease: 'back',
      });
    });

    trigger.addEventListener('mouseleave', () => {
      console.log('Mouse Leave trigger');
      gsap.to('.plants svg', {
        duration: 0.5,
        scale: 1,
        yPercent: 0,
        ease: 'circ.out',
      });

      gsap.to('.cta__join-button', {
        duration: 0.5,
        delay: 0,
        scale: 1,
        ease: 'back',
      });
    });
  }

  window.addEventListener('load', () => {
    plantsAnimation('.plants svg', 1, 0, 0);
    animateOnHover(plants);
    revealButton();
  });
</script>